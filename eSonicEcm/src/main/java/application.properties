
server.port=8080
logging.level.root = info


spring.datasource.url=jdbc:oracle:thin:@rosisit.iptime.org:11000/orcl
spring.datasource.username=eSonicEcm
spring.datasource.password=eSonicEcm
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver



# mybatis
mybatis.type-aliases-package=com.eSonic.ecm.mapper
mybatis.mapper-locations=mapper/*.xml0

logging.level.org.mybatis=DEBUG
logging.level.java.sql=DEBUG

# timeleaf

spring.thymeleaf.cache=false
#spring.thymeleaf.enabled=true
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html


logging.file.name=eSonicEcm.log
logging.file.path=D:\\workspace\\eSonicEcm\\log
logging.level.com.eSonic.ecm.util=DEBUG

### jpa setting ###
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
#사용하는 DB에 따라 변경 
##Hibernate 는 내부적으로 지정되는 DB에 맞게 SQL 문을 생성하는 Dialect 가 존재한다.
##이 Dialect 는 Hibernate가 다양한 데이터 베이스를 처리하기 위해 각 데이터 베이스에 맞는 SQL 문접을 처리하기 위해 존재하며, 
##MySQL5Dialect, MySQL5InnoDBDialect, Oracle10gDialect, OracleDialect 등 다양한 Dialect 가 있다. 
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
#JPA 나 hibernate를 통해 CRUD 를 실행하면 해당 CRUD 의 sql 을 로깅으로 보여준다. 
spring.jpa.hibernate.ddl-auto=none
#create : 테이블이 없을 경우 테이블 생성하는 옵션(이 때 DB 가 전부 날아가기 때문에, create로 해놓으면 실행시마다 DB 가 날아간다.
#create-drop : 테스트 환경에 적합한 옵션. 테스트 실행 시 mock data를 위해 table을 생성하고 테스트 종료 후 테이블을 삭제시킨다.
#validate : 테이블이 없을 경우 테이블 생성하는 옵션(이 때 DB 가 전부 날아가기 때문에, create로 해놓으면 실행시마다 DB 가 날아간다.
#update : 테이블이 없을 경우 테이블 생성하는 옵션(이 때 DB 가 전부 날아가기 때문에, create로 해놓으면 실행시마다 DB 가 날아간다.
#none : 아무 작업도 하지 않는다.
